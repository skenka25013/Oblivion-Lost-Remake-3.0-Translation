-- Зависимость подвижности ГГ общего состояния организма
-- hi_flyer 05/03/15


local time_apd = 0
local timeru = 1236

function update()

	if time_global() > time_apd then
		time_apd = time_global() + timeru

        	if db.actor and db.actor:alive() and xvars then
        
		local iCurrSat = db.actor.satiety 
       		local iCurrHea = db.actor.health
       		local zazda = db.actor:get_actor_thirst()

        	local iAllcond = iCurrSat * iCurrHea * zazda * 4
		if db.actor.max_power ~= iAllcond then
			db.actor.max_power = iAllcond        
		end

		if has_alife_info("actor_healing_medkit") then
			db.actor.health = db.actor.health + 0.015 - db.actor.health
		end

		if has_alife_info("actor_healing_antirad") then
			db.actor.radiation = - 0.05
			db.actor.alcohol = 0.01
			db.actor.power = 0.04
		end

		if has_alife_info("anti_glob_rad") then
			db.actor.radiation = - 0.4
			db.actor.alcohol = 0.001
		end

		if has_alife_info("deadzone_eff_now") then
			db.actor.psy_health = -0.02
			db.actor.alcohol = 0.0025
			level.add_pp_effector("brighten.ppe", 16771, true)
		end

		if db.actor.radiation > 0.45 then
			local radppe = db.actor.radiation
			level.add_pp_effector("radiation.ppe", 165236, true)
			level.set_pp_effector_factor(165236, radppe / 3)
			xvars.count_rad_weak = xvars.count_rad_weak + 0.00003
		else
			level.remove_pp_effector(165236)
		end

		-- лучевая болезнь Усталость восстанавливается хуже
		if db.actor.power > 0.7 and xvars.count_rad_weak > 0 then
			db.actor.power = - xvars.count_rad_weak
		end
		if db.actor.health > 0.5 and xvars.count_rad_weak > 0 then
			db.actor.health = - xvars.count_rad_weak * 0.5
		end
		if xvars.count_rad_weak > 0.0015 then
			local radppe = xvars.count_rad_weak
			level.add_pp_effector("contrast.ppe", 16516, true)
			level.set_pp_effector_factor(16516, radppe * 22)
			--log1("radweak ppe")
		else
			level.remove_pp_effector(16516)
		end

		-- Радиационное облучение,  Усталость восстанавливается хуже
		if db.actor.power > 0.75 and db.actor.radiation > 0 then
			db.actor.power = - db.actor.radiation / 35
		end

		if db.actor.psy_health <= 0.4 then
			olr_bolezn.set_actor_zombied()
		end

		-- здоровье
		if db.actor.health <= 0.3 then
			local hppe = 1 - db.actor.health
			level.add_pp_effector("fire_hit_bullet.ppe", 9516, true)
			level.set_pp_effector_factor(9516, hppe / 55)
			--log1("hppe ppe "..hppe.." ")
		else
			level.remove_pp_effector(9516)
		end

		this.act_temp()

        	local iCurrPow = db.actor.power
        	local iCurrPow5 = db.actor.power * 5
        	local iCurrPowJump = db.actor.power
		local a = get_actor_obj()
		if a then 
		if a.state.sprint then
			db.actor.satiety = -0.0005
		end

		local cur_jumps = iCurrPowJump * 7 + jump_golmar_outfit() + jump_exo_outfit() - exo_check_jump()
		if cur_jumps < 5 then
			cur_jumps = 5.5
		end
		if iCurrPowJump < 0.1 then
			cur_jumps = 2.5
		end
		a.jump_speed = cur_jumps
		--log1(" "..iCurrPowJump.." --- "..cur_jumps.."")

		if a.state.run then
			return
		end

		a.walk_accel = 7 + iAllcond + iCurrPow5 + walk_exo_prm() - exo_check_walk()
		--log1(""..a.walk_accel.."")

	end 
	end

end
end


function exo_check_jump()
if db.actor then
local has_out = db.actor:object("exo_outfit")
if not has_out then
	return 0
end
if has_out and not db.actor:is_in_slot(has_out) then
	return 0
end
if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if not exo_acum then
        local iCurrPow = db.actor.power * 6.5
	return iCurrPow
end
end

if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if exo_acum and not db.actor:is_on_belt(exo_acum) then
        local iCurrPow = db.actor.power * 6.5
	return iCurrPow
end
end


if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if exo_acum and db.actor:is_on_belt(exo_acum) then
	return 0
end
end

end
end



function exo_check_walk()
if db.actor then
local has_out = db.actor:object("exo_outfit")
if not has_out then
	return 0
end
if has_out and not db.actor:is_in_slot(has_out) then
	return 0
end
if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if not exo_acum then
        local iCurrSat  = db.actor.satiety 
        local iCurrHea  = db.actor.health
        local ustalost  = db.actor:get_actor_sleep()
	local zazda 	= db.actor:get_actor_thirst()
        local iCurrPow5 = db.actor.power * 5
        local iAllcond = iCurrSat * iCurrHea * ustalost * zazda * 4
	local exwalk = 5 + iAllcond + iCurrPow5
	return exwalk
end
end


if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if exo_acum and not db.actor:is_on_belt(exo_acum) then
        local iCurrSat = db.actor.satiety 
        local iCurrHea = db.actor.health
	local zazda = db.actor:get_actor_thirst()
        local ustalost = db.actor:get_actor_sleep()
        local iCurrPow5 = db.actor.power * 5
        local iAllcond = iCurrSat * iCurrHea * ustalost * zazda * 4
	local exwalk = 5 + iAllcond + iCurrPow5
	return exwalk
end
end

if has_out and db.actor:is_in_slot(has_out) then
local exo_acum = db.actor:object("exo_acum_ob")
	if exo_acum and db.actor:is_on_belt(exo_acum) then
	return 0
end
end


end
end



function walk_exo_prm()
if db.actor then
local has_out = db.actor:object("exo_outfit")
if not has_out then
	return 0
end
if has_out and not db.actor:is_in_slot(has_out) then
	return 0
end
if has_out and db.actor:is_in_slot(has_out) then
	return 2.5
end
end
end



function jump_golmar_outfit()
if db.actor then
local has_out = db.actor:object("outfit_stalker_golmar")
if not has_out then
	return 0
end
if has_out and not db.actor:is_in_slot(has_out) then
	return 0
end
if has_out and db.actor:is_in_slot(has_out) then
	return 2.5
end
end
end


function jump_exo_outfit()
if db.actor then
local has_out = db.actor:object("exo_outfit")
if not has_out then
	return 0
end
if has_out and not db.actor:is_in_slot(has_out) then
	return 0
end
if has_out and db.actor:is_in_slot(has_out) then
	return 1.5
end
end
end

----------------------------------------------------------------------------------------------------

--Oblivion Lost Remake (2014)
--(c) proger_Dencheek
--Артефакты, поднимающие максимальный вес в инвентаре

local ini = system_ini()
local last_obj = {}

local function take_item(state, obj)
	if state == true then
		if last_obj[tostring(obj:id())] == nil then
			last_obj[tostring(obj:id())] = true
		end
	elseif last_obj[tostring(obj:id())] == true then
		last_obj[tostring(obj:id())] = nil
	else
		return nil
	end

	
	if obj ~= nil then
		if ini:line_exist(obj:section(), "add_walk_weight") then
			local val = ini:r_float(obj:section(), "add_walk_weight")
			if state == true then
				db.actor:set_actor_max_weight(db.actor:get_actor_max_weight() + val)
			else
				db.actor:set_actor_max_weight(db.actor:get_actor_max_weight() - val)
			end
		end
		end



		if ini:line_exist(obj:section(), "add_max_walk_weight") then
			local val = ini:r_float(obj:section(), "add_max_walk_weight")
			if state == true then
				db.actor:set_actor_max_walk_weight(db.actor:get_actor_max_walk_weight() + val)
			else
				db.actor:set_actor_max_walk_weight(db.actor:get_actor_max_walk_weight() - val)
			end
		end



	end


--Коллбек на помещение предмета на слот
function take_item_on_slot(obj)
take_item(true, obj)
end
--Коллбек на помещение предмета на пояс
function take_item_on_belt(obj)
take_item(true, obj)
end
--Коллбек на помещение предмета в рюкзак
function take_item_on_ruck(obj)
take_item(false, obj)
end
--Коллбек на выбрасывание предмета из инвентаря
function drop_item_on_inv(obj)
take_item(false, obj)
end


----- ТЕМПЕРАТУРА ГГ
----------------------------------------------------------------------------------------------------
local min_porog_temp = 34
local max_porog_temp = 40

local min_temp = 32
local max_temp = 42

function act_temp()

	if not has_alife_info("esc_olr_kvest_3") then
		return 
	end

	--if level.name() == "lvl1_escape" or level.name() == "lvl2_garbage" then
		--return
	--end 

	if level.name() == "lvl_mars" or level.name() == "lvl_nightmare" or level.name() == "lvl16_generators" then
		return
	end 

	if db.actor and xvars.temperatura_actor then

	if bind_anomaly.u_costra() == true or bind_coster.u_costra() == true then
		xvars.temperatura_actor = xvars.temperatura_actor + 0.0090
		--news_manager.send_tip(db.actor, " olr_gz Актор у костра")
		if xvars.temperatura_actor > 38.1 then
			xvars.temperatura_actor = xvars.temperatura_actor - 0.0095
		end
	end

	if level.rain_factor() > 0.1 or (db.actor:is_actor_outdoors() == false and has_alife_info("olr_traders_night")) then
		if not has_norm_teploprot() and not olr.actor_in_lab() then
			xvars.temperatura_actor = xvars.temperatura_actor - 0.009
			--news_manager.send_tip(db.actor, " olr_gz ahtung zamerzaem bez norm zashity") 
			local slp = math.random(1,180)
			if slp == 1 then	
				olr.sopli()
				if math.random(1,2) == 1 then
					olr.hud_tip("", "Cool...", 3)
					olr.sopli()
				else
					--olr.hud_tip("", "Нужно согреться...", 3)
					olr.sopli()
				end
			end
		end
		if has_norm_teploprot() then
			xvars.temperatura_actor = xvars.temperatura_actor + 0.001 
			if xvars.temperatura_actor > 37.1 then
				xvars.temperatura_actor = xvars.temperatura_actor - 0.0015
			end	
		end
	end

	if has_alife_info("olr_traders_day") then
		if has_norm_teploprot() then
			xvars.temperatura_actor = xvars.temperatura_actor + 0.001 
			if xvars.temperatura_actor > 37.1 then
				xvars.temperatura_actor = xvars.temperatura_actor - 0.0015 
			end	
		end
	end

	if xvars.temperatura_actor < min_porog_temp and (level.rain_factor() > 0.5 or has_alife_info("olr_traders_night")) then
		local pst = math.random(1,90) 
		if pst == 1 then
			if not has_alife_info("actor_has_prostuda") then
				olr.info("actor_has_prostuda")
				news_manager.send_tip(db.actor, "Hmm. I think I'm getting a little cold.", 1, "act", 39000)
				olr.sopli()
			end
		end
	end

	if xvars.temperatura_actor > max_porog_temp and has_alife_info("actor_has_prostuda") then
		db.actor.health = -0.001
		olr.sopli()
		news_manager.send_tip(db.actor, "We already have a cold.")
	end


	if xvars.temperatura_actor < min_temp then
		db.actor.health = -0.001
		xvars.temperatura_actor = xvars.temperatura_actor + 0.0005
	end

	if xvars.temperatura_actor > max_temp then
		db.actor.health = -0.001
		xvars.temperatura_actor = xvars.temperatura_actor - 0.0005
	end

	end

	--log1("cur_temp is "..xvars.temperatura_actor.."")

end

function has_norm_teploprot()
	local outfit = db.actor:get_current_outfit()
	if outfit and outfit:condition() > 0.51 then
		return true
	end
end

----------------------------------------------------------------------------------------------------