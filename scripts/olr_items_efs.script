-- hi_flyer 28.11.15

function use_hud_item()

local item_in_hands = db.actor:item_in_slot(4)
local section = item_in_hands:section()

--news_manager.send_tip(db.actor, "EAT HUD ITEM "..item_in_hands:name().." ", nil, "default", 4000)

if section == "water" then 
        local bobj2 = alife():create("ph_food_vater", db.actor:position():add(db.actor:direction():add(0.1)), db.actor:level_vertex_id(), db.actor:game_vertex_id())
        level.client_spawn_manager():add(bobj2.id, 0, 
        function(id,obj) 
	if obj then
        local h = hit()
	h.draftsman = obj
	h.type = hit.strike
	h.direction = vector():set(math.random(1),0.1,math.random(1))
	h.power = 1
	h.impulse = 2
	obj:hit(h)
        end
        end)
        --log1("eat voda")
end


if section == "mutant_dog_tail" or section == "mutant_psevdodog_tail" then
	local bol_var = math.random(1,4)
	if bol_var == 1 then
		if olr_timers.has_timer("bolezn_beshenstvo_timer") then
			--news_manager.send_tip(db.actor, "ЗАБОЛЕЛИ Заражение бешенством - ещё не кончился bolezn_beshenstvo_timer")
			return
		end
		if olr_timers.has_timer("bolezn_beshenstvo_timer_m") then
			--news_manager.send_tip(db.actor, "ЗАБОЛЕЛИ Заражение бешенством - ещё не кончился bolezn_beshenstvo_timer_м")
			return
		end
		if olr_timers.has_timer("bolezn_beshenstvo_timer_d") then
			--news_manager.send_tip(db.actor, "ЗАБОЛЕЛИ Заражение бешенством - ещё не кончился bolezn_beshenstvo_timer_д")
			return
		end
                if not has_alife_info("bolezn_beshenstvo_info") then
			--news_manager.send_tip(db.actor, "ЗАБОЛЕЛИ БЕШЕНСТВО")
                       	olr_timers.st_timer("bolezn_beshenstvo_timer", 1950, "nick.bolezn_beshenstvo_timer()")
                       	db.actor:disable_info_portion("bolezn_beshenstvo_info_first_dis")
			db.actor:give_info_portion("bolezn_beshenstvo_info")             
		end
	end
end


if section == "mutant_zombie_hand" or section == "mutant_boar_leg" or section == "mutant_flesh_eye" then
	local bol_var = math.random(1,4)
	if bol_var == 1 then
		bind_monster.zarazjenie_parazitom()
	end
	if section == "mutant_zombie_hand" then
	for k,v in pairs(db.storage) do
        local stalker = level.object_by_id(k)
            if stalker and (get_clsid(stalker)==clsid.script_stalker) and stalker:alive() then
				if stalker:position():distance_to(db.actor:position()) < 20 and stalker:see(db.actor) and not olr_protected.is_no_offline_alife_obj(stalker:name()) then
			
				local seer_name = news_main.get_npc_name(stalker)
				news_manager.send_tip(db.actor, ""..seer_name..": Guys. I just saw it myself. Messer, the one from the truck of death, now a piece of meat of some strange ate! Pay attention.", 15, "unknown", 39000)
				db.actor:change_character_reputation(-60)
				break
				
				end
		end
	end
	end
end


if section == "snotvornoe" then
	db.actor.alcohol = 1
        db.actor:set_actor_sleep(-1)
end

if section == "psy_stabilizator" then
	db.actor.alcohol = -1
        db.actor.psy_health = 1
        if ( xr_conditions.actor_in_zone(nil,nil,{"lvl12_radar_bunker_space_restrictor_fake_lab_waro"}))  then
		if has_alife_info("radbun_mosk_start") then
			olr_teleport.rad_back_bun_nacalo()
		end
	end
end


if section == "antirad" then
        db.actor:give_info_portion("actor_healing_antirad")
        olr_timers.st_timer("eat_radiation_tmr_timer", 20, "nick.eat_radiation_tmr_timer()")
	if xvars.count_rad_weak > 0 then
		xvars.count_rad_weak = xvars.count_rad_weak - 0.0015
		if xvars.count_rad_weak < 0 then
			xvars.count_rad_weak = 0
		end
		--news_manager.send_tip(db.actor, "сняли радиации в организме "..xvars.count_rad_weak.."", nil, "default", 39000)
	end
end


if section == "vodka" then
	if has_alife_info("actor_healing_antirad") then
		db.actor:set_actor_sleep(-1)
	end
        db.actor:give_info_portion("actor_healing_antirad")
        olr_timers.st_timer("eat_radiation_tmr_timer", 10, "nick.eat_radiation_tmr_timer()")
        db.actor.psy_health = db.actor.psy_health + 0.3
        local bobj2 = alife():create("vodka_used_empty", db.actor:position():add(db.actor:direction():add(0.1)), db.actor:level_vertex_id(), db.actor:game_vertex_id())
        level.client_spawn_manager():add(bobj2.id, 0, 
        function(id,obj) 
	if obj then
        	local h = hit()
		h.draftsman = obj
		h.type = hit.strike
		h.direction = vector():set(math.random(1),0.1,math.random(1))
		h.power = 1
		h.impulse = 2
		obj:hit(h)
        end
        end)
        --log1("eat vodka")
	xvars.drinked_vodkas = xvars.drinked_vodkas + 1
	if xvars.drinked_vodkas > 2 then
		if db.actor.health > 0.31 then
			db.actor.health = - 0.3
		end
		olr.hud_tip("", "I've been drinking too much.", 7)
		db.actor:set_actor_sleep(-0.6)
		--news_manager.send_tip(db.actor, "Что-то я перепил сегодня...", nil, "default", 6000)
	end
        if ( xr_conditions.actor_in_zone(nil,nil,{"lvl12_radar_bunker_space_restrictor_fake_lab_waro"}))  then
		if has_alife_info("radbun_mosk_start") then
			olr_teleport.rad_back_bun_nacalo()
		end
	end
        if has_alife_info("eat_medkit_tmr") then
		db.actor:set_actor_sleep(-1)
	end
	if xvars.count_rad_weak > 0 then
		xvars.count_rad_weak = xvars.count_rad_weak - 0.001
		if xvars.count_rad_weak < 0 then
			xvars.count_rad_weak = 0
		end
		--news_manager.send_tip(db.actor, "сняли радиации в организме "..xvars.count_rad_weak.."", nil, "default", 39000)
	end
end

if section == "medkit" then 
        db.actor:give_info_portion("eat_medkit_tmr")
        db.actor:give_info_portion("actor_healing_medkit")
        olr_timers.st_timer("eat_medkit_tmr_timer", 20, "nick.eat_medkit_tmr_timer()")
        --log1("eat medkit")
        local par_var = math.random(1,3)
        if par_var == 1 then
        	alife():create('energy_drink', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
        end
end



if section == "medkit_army" then 
        db.actor:give_info_portion("eat_medkit_tmr")
        db.actor:give_info_portion("actor_healing_medkit")
        olr_timers.st_timer("eat_medkit_tmr_timer", 25, "nick.eat_medkit_tmr_timer()")
        --log1("eat medkit_army")
        alife():create('energy_drink', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end


if section == "medkit_scientic" then 
        db.actor:give_info_portion("eat_medkit_tmr")
        db.actor:give_info_portion("actor_healing_medkit")
        olr_timers.st_timer("eat_medkit_tmr_timer", 30, "nick.eat_medkit_tmr_timer()")
        --log1("eat medkit_scientic")
        local par_var = math.random(1,3)
        if par_var == 1 then
        	alife():create('energy_drink', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
        	alife():create('bandage', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
        end
end


if section == "sigaret" then 
        db.actor.psy_health = db.actor.psy_health + 0.1
        db.actor.alcohol = db.actor.alcohol + 0.01
        db.actor.power = 0.05
        --log1("eat sigaret")
	nick.sigaret_smoke()
	if xvars.count_rad_weak > 0 then
		xvars.count_rad_weak = xvars.count_rad_weak - 0.0001
		if xvars.count_rad_weak < 0 then
			xvars.count_rad_weak = 0
		end
		--news_manager.send_tip(db.actor, "сняли радиации в организме "..xvars.count_rad_weak.."", nil, "default", 39000)
	end
end


if section == "crow_food" then 
        --log1("eat crow_food")
	xvars.count_rad_weak = xvars.count_rad_weak + 0.0015
	db.actor.radiation = 0.02315
end


if section == "item_razradnik" then 
        olr_razradnik.on_use()
end



if section == "rat_food" then 
        local par_var = math.random(1,5)
        if par_var == 1 then
		if not has_alife_info("bolezn_ratcrazy_info") then
			olr_timers.st_timer("bolezn_ratcrazy_timer", 2150, "nick.bolezn_ratcrazy_timer()")
			db.actor:give_info_portion("bolezn_ratcrazy_info")
        		--news_manager.send_tip(db.actor, "ЗАБОЛЕЛИ Крысиное безумие")
		end
        	--log1("eat rat_food")
	end
end


if section == "anti_beshenstvo_dog_caps" then 
        db.actor:give_info_portion("bolezn_beshenstvo_info_lech")
        db.actor.alcohol = db.actor.alcohol + 0.3
        --log1("eat anti_beshenstvo_dog_caps")
end


--if section == "hand_torch" then 
--	db.actor:disable_info_portion("hand_torch_on")
--        alife():create('hand_torch', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
--end



if section == "detector_activator_deznt" then 
        alife():create('detector_activator_deznt', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	activate_dezint_arts()
end


if section == "med_injector" then 
        alife():create('med_injector_empty', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	nick.clear_all_bolezns()
end



-- тут но_енд сделать?
if section == "med_injector_empty" then 
        alife():create('med_injector_empty', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
if section == "planshet" then 
        alife():create('planshet', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
end
if section == "detector_zomscan" then 
        alife():create('detector_zomscan', db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	local obj = bind_stalker.loked_obj
	if obj then
	local item_in_hands = db.actor:active_item()
	if item_in_hands then
	local section = item_in_hands:section()
	if section == "detector_zomscan" then
		if obj:is_stalker() and obj:alive() then
			if not has_alife_info("mil_zomb_check_one") and obj:name() == "lvl9_military_stalker_0055" then
				db.actor:give_info_portion("mil_zomb_check_one")
				news_manager.send_tip(db.actor, "Subject has been exposed to significant psi radiation. Status: Zombified.", nil, "zombied", 5000)
			end
			if not has_alife_info("mil_zomb_check_two") and obj:name() == "lvl9_military_stalker_0054" then
				db.actor:give_info_portion("mil_zomb_check_two")
				news_manager.send_tip(db.actor, "Subject has been subjected to psi radiation of undetermined power. Status: Zombified.", nil, "zombied", 5000)
			end
			if not has_alife_info("mil_zomb_check_tri") and obj:name() == "lvl9_military_stalker_0053" then
				db.actor:give_info_portion("mil_zomb_check_tri")
				news_manager.send_tip(db.actor, "Subject has been subjected to psi radiation. Status: Zombified.", nil, "zombied", 5000)
			end
			
		end
		if obj:is_stalker() and not obj:alive() then
			if not has_alife_info("mil_zomb_check_one_dead") and obj:name() == "lvl9_military_stalker_0055" then
				db.actor:give_info_portion("mil_zomb_check_one_dead")
				news_manager.send_tip(db.actor, "Body scans have been received.", nil, "zombied", 5000)
			end
			if not has_alife_info("mil_zomb_check_two_dead") and obj:name() == "lvl9_military_stalker_0054" then
				db.actor:give_info_portion("mil_zomb_check_two_dead")
				news_manager.send_tip(db.actor, "Body scan data received.", nil, "zombied", 5000)
			end
			if not has_alife_info("mil_zomb_check_tri_dead") and obj:name() == "lvl9_military_stalker_0053" then
				db.actor:give_info_portion("mil_zomb_check_tri_dead")
				news_manager.send_tip(db.actor, "Body scan data received.", nil, "zombied", 5000)
			end
		end
		if obj:is_stalker() and has_alife_info("docent_scan_zomb_done_inf") then
			if obj:character_community() == "zombied" or obj:character_community() == "sin" then
				news_manager.send_tip(db.actor, "Name--  "..obj:character_name()..". Subjected to psi radiation. Status: Zombified.", nil, "zombied", 5000)
			else
				news_manager.send_tip(db.actor, "Name-- "..obj:character_name()..". Not exposed to psi radiation.", nil, "medkit", 5000)
			end
		end
	end
	end
	end
end



if section == "antirad_medpribor" then
	xvars.count_rad_weak = 0 
        db.actor:give_info_portion("anti_glob_rad")
        olr_timers.st_timer("anti_glob_rad_timer", 250, "nick.anti_glob_rad_timer()")
        olr_timers.st_timer("anti_glob_rad_timer", 265, "nick.anti_glob_rad_timer()")
        --log1("eat antirad_medpribor")
end


if section == "battery_change" then 
        --log1("eat battery_change")
        nick.enable_senf()
	olr.show_minimap(true)
end


if section == "battery_change_headlamp" then 
        local has_torch = db.actor:object("device_torch")
        if has_torch and db.actor:is_on_belt(has_torch) then
        	--log1("eat battery_change_headlamp")
        	has_torch:set_condition(1)
	end
end

if section == "bread" or section == "kolbasa" or section == "conserva" or section == "rat_food" or section == "crow_food" then 
	if xvars.foods[item_in_hands:name()] == true then
		--news_manager.send_tip(db.actor, "сожрали облучённую еду - накопили радиации в организме "..xvars.count_rad_weak.."", nil, "default", 39000)
		xvars.count_rad_weak = xvars.count_rad_weak + 0.00086
		xvars.foods[item_in_hands:name()] = nil
		--log1("del food variable")
	end
	local cond = item_in_hands:condition()
	if cond <= 0 then
		db.actor.satiety = 0.15
	end
end

if section == "conserva" then
        local bobj2 = alife():create("ph_food_conserv1", db.actor:position():add(db.actor:direction():add(0.1)), db.actor:level_vertex_id(), db.actor:game_vertex_id())
        level.client_spawn_manager():add(bobj2.id, 0, 
        function(id,obj) 
	if obj then
        	local h = hit()
		h.draftsman = obj
		h.type = hit.strike
		h.direction = vector():set(math.random(1),0.1,math.random(1))
		h.power = 1
		h.impulse = 2
		obj:hit(h)
        end
	end)
	local full_satc
	local gdiff = level.get_game_difficulty()
	if gdiff == 0 then
		full_satc = 0.7
	elseif gdiff == 1 then
		full_satc = 0.65
	elseif gdiff == 2 then
		full_satc = 0.60
	elseif gdiff == 3 then
		full_satc = 0.50
	end
	local s_cond = 1 - item_in_hands:condition()
	local curr_sat = full_satc - s_cond / 3
	db.actor.satiety = curr_sat
	if curr_sat < 0 then
		--log1(" CONSERVA < 0   lost - "..s_cond.." --- add satiety - "..curr_sat.."")
		db.actor.satiety = 0.15
	end
	--log1(" lost - "..s_cond.." --- add satiety - "..curr_sat.."")
end

if section == "bread" then
	local full_satb 
	local gdiff = level.get_game_difficulty()
	if gdiff == 0 then
		full_satb = 0.4
	elseif gdiff == 1 then
		full_satb = 0.35
	elseif gdiff == 2 then
		full_satb = 0.3
	elseif gdiff == 3 then
		full_satb = 0.25
	end
	local s_cond = 1 - item_in_hands:condition()
	local curr_sat = full_satb - s_cond / 3
	db.actor.satiety = curr_sat
	if curr_sat < 0 then
		--log1(" BREAD < 0   lost - "..s_cond.." --- add satiety - "..curr_sat.."")
		db.actor.satiety = 0.12
	end
	--log1(" lost - "..s_cond.." --- add satiety - "..curr_sat.."")
end

if section == "kolbasa" then
	local full_satk 
	local gdiff = level.get_game_difficulty()
	if gdiff == 0 then
		full_satk = 0.5
	elseif gdiff == 1 then
		full_satk = 0.45
	elseif gdiff == 2 then
		full_satk = 0.40
	elseif gdiff == 3 then
		full_satk = 0.35
	end
	local s_cond = 1 - item_in_hands:condition()
	local curr_sat = full_satk - s_cond / 3
	db.actor.satiety = curr_sat
	if curr_sat < 0 then
		--log1(" KOLBASA < 0   lost - "..s_cond.." --- add satiety - "..curr_sat.."")
		db.actor.satiety = 0.15
	end
	--log1(" lost - "..s_cond.." --- add satiety - "..curr_sat.."")
end


--------------------------------------------------------------------------
if section == "detector_siniy" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal")
        amk.spawn_item_in_inv("fake_pribor_jaba")
end
if section == "detector_siniy_2" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal2")
        amk.spawn_item_in_inv("fake_pribor_jaba")
end
if section == "detector_siniy_3" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal3")
        amk.spawn_item_in_inv("fake_pribor_jaba")
end
if section == "detector_siniy_4" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal4")
        amk.spawn_item_in_inv("fake_pribor_jaba")
end
if section == "detector_siniy_5" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal5")
        amk.spawn_item_in_inv("fake_pribor_jaba")
end
if section == "detector_siniy_6" then 
        db.actor:give_info_portion ("esc_zam_jab_sdelal6")
        amk.spawn_item_in_inv("fake_pribor_jaba_zameryany")
end
-------------------------------------------------------------------------


end
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function on_slot(obj)
	med_inj_diagnoz(obj)
	pda_check(obj)  
	torch_check(obj)
end


function torch_check(obj)
	if obj then
		local section = obj:section()
		if section == "battery_change_headlamp" then 
		local has_torch = db.actor:object("device_torch")
        		if has_torch == nil then
				olr.del(obj)
				alife():create("battery_change_headlamp", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
				news_manager.send_tip(db.actor, "Нет фонаря", nil, "default", 6000)
			end
		end
	end
end


function pda_check(obj)
	if device().precache_frame >1 then return end
	if obj ~= nil then
	local section = obj:section()

	if section == "battery_change" then 

   	local pdaitm = db.actor:object("device_pda") 
   	local namecond = pdaitm:condition() * 100
    	local nameconddel = "PDA charge: "..string.format("%1.0f", namecond).."%"
    	news_manager.send_tip(db.actor, ""..nameconddel.."", nil, "default", 6000)

	-- TODO - убрал изза вылета по правке выгрузки текстур из памяти
	if pdaitm:condition() >= 0.6 and pdaitm:condition() <= 1 then
		--pda_norm()
		return
	end

	if pdaitm:condition() >= 0.3 and pdaitm:condition() <= 0.6 then
		--news_manager.send_tip(db.actor, "мидл ", nil, "dolg", 6000)
		--pda_midle()
		return
	end

	if pdaitm:condition() >= 0.1 and pdaitm:condition() <= 0.3 then
		--news_manager.send_tip(db.actor, "лоу ", nil, "dolg", 6000)
		--pda_low()
		return
	end

	if pdaitm:condition() >= 0 and pdaitm:condition() <= 0.05 then
		--pda_dead()
		--news_manager.send_tip(db.actor, "деад ", nil, "dolg", 6000)
		return
	end

	end
	end

end

function pda_norm()
    local te = texture_find("item\\item_pda_idle")
    if te then
    te:set_name("item\\item_pda_norm")
    te:reload() 
    --news_manager.send_tip(db.actor, "норм ", nil, "dolg", 6000)
end
end
function pda_midle()
    local te = texture_find("item\\item_pda_idle")
    if te then
    te:set_name("item\\item_pda_midle")
    te:reload() 
--    news_manager.send_tip(db.actor, "мидл ", nil, "dolg", 6000)
end
end

function pda_low()
    local te = texture_find("item\\item_pda_idle")
    if te then
    te:set_name("item\\item_pda_low")
    te:reload() 
    --news_manager.send_tip(db.actor, "лоу ", nil, "dolg", 6000)
end
end

function pda_dead()
    local te = texture_find("item\\item_pda_idle")
    if te then
    te:set_name("item\\item_pda_dead")
    te:reload() 
    --news_manager.send_tip(db.actor, "деад ", nil, "dolg", 6000)
end
end
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


function on_quick_bandage()
	if has_alife_info("ui_inventory") then return end
	local inv_window = level.main_input_receiver()
	if inv_window and inv_window:IsShown() then
		return
	end
	local ibandage = db.actor:object("bandage")
		if ibandage ~= nil then

		local item_in_hands = db.actor:item_in_slot(4)
		if item_in_hands then
			db.actor:move_to_ruck(item_in_hands)
		end

		db.actor:move_to_slot(ibandage, true)
		db.actor:activate_slot(4)
		--get_actor_obj():press_action(28)
		olr.snd([[weapons\generic_draw]])

	end
end


----------------------------------------------------

function on_quick_medkit()
	if has_alife_info("ui_inventory") then return end
	local inv_window = level.main_input_receiver()
	if inv_window and inv_window:IsShown() then
		return
	end
	local medkit_one = db.actor:object("medkit")
		if medkit_one ~= nil then

		local item_in_hands = db.actor:item_in_slot(4)
		if item_in_hands then
			db.actor:move_to_ruck(item_in_hands)
		end

		db.actor:move_to_slot(medkit_one, true)
		db.actor:activate_slot(4)
		olr.snd([[weapons\generic_draw]])
		return
		--get_actor_obj():press_action(28)

	end

	local medkit_two = db.actor:object("medkit_army")
		if medkit_two ~= nil then

		local item_in_hands = db.actor:item_in_slot(4)
		if item_in_hands then
			db.actor:move_to_ruck(item_in_hands)
		end

		db.actor:move_to_slot(medkit_two, true)
		db.actor:activate_slot(4)
		olr.snd([[weapons\generic_draw]])
		return
		--get_actor_obj():press_action(28)

	end

	local medkit_tri = db.actor:object("medkit_scientic")
		if medkit_tri ~= nil then

		local item_in_hands = db.actor:item_in_slot(4)
		if item_in_hands then
			db.actor:move_to_ruck(item_in_hands)
		end

		db.actor:move_to_slot(medkit_tri, true)
		db.actor:activate_slot(4)
		olr.snd([[weapons\generic_draw]])
		return
		--get_actor_obj():press_action(28)

	end


end

----------------------------------------------------




function activate_dezint_arts()
	for i=1, 65534 do
		local artid = level.object_by_id(i)
        	if artid and artid:is_artefact() then
			if not artid:parent() then
			local dist = db.actor:position():distance_to_sqr(artid:position())
				if dist <= 80 then
					if artid:section() == "af_dummy_battery" then
						local obj = olr_anoms_spawn.spawn_anom("zone_buzz_dezint", math.random(2,4), artid:position(),artid:level_vertex_id(),artid:game_vertex_id(), 0.095 ,bit_not(0))
						olr_timers.st_timer("del_desint_anomaly", 55, "olr_items_efs.del_desint_anomaly("..tostring(obj.id)..")")
						--log1(""..obj:name().."")
						alife():release(alife():object(artid:id()))
					end
				end
			end
		end
	end
end

function del_desint_anomaly(id)
	local sobj = alife():object(id)
  	if sobj then
		--local bloodbridgew = vector():set( 0, -1123, 0 )
		--alife():teleport_object(sobj.id, db.actor:game_vertex_id(), db.actor:level_vertex_id(), bloodbridgew)
		--olr.to_offline(sobj:name())
	end
end

function med_inj_diagnoz(obj)
	if device().precache_frame >1 then return end
	if obj:section() == "med_injector" then  -- or obj:section() == "med_injector_empty"
		level.start_stop_menu(olr_items_efs.injector_info(),true)
		--news_manager.send_tip(db.actor, "деад ", nil, "dolg", 6000)
	end
end



class "injector_info" (CUIScriptWnd)

function injector_info:__init() super()
	self:InitControls()
	self:InitCallBacks()
end

function injector_info:InitControls()
	local xml = CScriptXmlInit()
	self:Init(0,0,1024,768)
	xml:ParseFile("injector_info.xml")
	self.frame3 = xml:InitFrame("frame3", self)
	self:Register(xml:Init3tButton("frame3:button2", self.frame3), "button2")
	self.Static5 = xml:InitStatic("frame3:Static5", self.frame3)
	self.frame4 = xml:InitFrame("frame3:frame4", self.frame3)
	self.Static7 = xml:InitStatic("frame3:frame4:Static7", self.frame4)
	self.Static8 = xml:InitStatic("frame3:frame4:Static8", self.frame4)
	self.Static9 = xml:InitStatic("frame3:frame4:Static9", self.frame4)
	self.Static10 = xml:InitStatic("frame3:frame4:Static10", self.frame4)
	self.Static11 = xml:InitStatic("frame3:frame4:Static11", self.frame4)
	self.Static12 = xml:InitStatic("frame3:frame4:Static12", self.frame4)
	self.Static15 = xml:InitStatic("frame3:frame4:Static15", self.frame4)
	self.Static17 = xml:InitStatic("frame3:frame4:Static17", self.frame4)
	
	self.temperatura = xvars.temperatura_actor
	self.paras = get_paras()
	self.beshenstv = get_besh()
	self.luchevaya = xvars.count_rad_weak
	self.ratbezum = get_ratbezum()
	self.sibyazva = get_sibyazva()
	self.zombied = get_zombied()

        self.Static11:SetTextST(string.format("Body temperature: %s", self.temperatura))
        self.Static7:SetTextST(string.format("Parasite infestation: %s", self.paras))
        self.Static9:SetTextST(string.format("Rabies: %s", self.beshenstv))
        self.Static12:SetTextST(string.format("Radiation sickness (RvH): %s", self.luchevaya))
        self.Static10:SetTextST(string.format("Rat madness: %s", self.ratbezum))
        self.Static15:SetTextST(string.format("Anthrax: %s", self.sibyazva))
        self.Static17:SetTextST(string.format("Zombification: %s", self.sibyazva))
        self.Static8:SetTextST("Body Condition:")

	local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_mapspot]])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)

end

function injector_info:__finalize()
end

function injector_info:InitCallBacks()
	self:AddCallback("button2", ui_events.BUTTON_CLICKED, self.button2_button_clicked, self)
end

function injector_info:button2_button_clicked()
	self:GetHolder():start_stop_menu(self, true)
end

function injector_info:Hide()
	self:GetHolder():start_stop_menu(self, true)
	collectgarbage("collect")
end

function get_paras()
	if has_alife_info("bolezn_parazity_info") then
		return game.translate_string("Positive")
	else
		return game.translate_string("Absent")
	end
end

function get_besh()
	if has_alife_info("bolezn_beshenstvo_info") then
		return game.translate_string("Positive")
	else
		return game.translate_string("Absent")
	end
end

function get_ratbezum()
	if has_alife_info("bolezn_ratcrazy_info") then
		return game.translate_string("Positive")
	else
		return game.translate_string("Negative")
	end
end

function get_sibyazva()
	if has_alife_info("bolezn_sibyazva_info") then
		return game.translate_string("Positive")
	else
		return game.translate_string("Negative")
	end
end

function get_zombied()
	if has_alife_info("bolezn_zombied_info") then
		return game.translate_string("Positive")
	else
		return game.translate_string("Absent")
	end
end


local timej = 0
local ftup = math.random(500,600)
function kick_object_ph()

	if time_global() > timej then
	timej = time_global() + ftup

	--log1("kick_object_ph now")
	local loked_obj = bind_stalker.loked_obj
	if loked_obj ~= nil and not has_alife_info("ui_inventory") then
		if loked_obj:position():distance_to(db.actor:position()) < 2 then
		if not loked_obj:is_entity_alive() and not loked_obj:alive() then
		local shelbonehp = loked_obj:get_physics_shell()
		if not shelbonehp then return end
		local shelbone = shelbonehp:get_element_by_bone_id(0)
		if shelbone then

		if loked_obj:mass() < 120 then

	   	local look_vec = vector():set(device().cam_dir):normalize()
    		look_vec.x = look_vec.x
    		look_vec.z = look_vec.z + math.random(50, 90)
    		look_vec.y = look_vec.y
		look_vec:normalize()
	   	local h = hit()
	   	h.draftsman = db.actor
	  	h.type = hit.explosion
           	h.direction = vector():set(look_vec)
	   	h.power = 0.00001
	   	h.impulse = loked_obj:mass() * math.random(10,30)
	   	loked_obj:hit(h)


    		local dir = vector():set(device().cam_dir):sub(loked_obj:position())
    		dir.x = dir.x
    		dir.z = dir.z + math.random(50, 90)
    		dir.y = dir.y
   		dir:normalize()
		loked_obj:set_const_force(dir, loked_obj:mass() * math.random(15,30), 10)
 
		local snd_obj = xr_sound.get_safe_sound_object([[ol3\kick_object]])
		if not snd_obj:playing() then 
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)	
		end
		db.actor.health = -0.001
        	db.actor.power = -0.006
		db.actor.satiety = -0.004
	end
	end
	end 
	end
	end

	end

end



















